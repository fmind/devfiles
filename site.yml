---

- hosts: localhost

  tasks:
# CLANG{{{
  - name: install clang
    package: name='{{item}}'
    with_items:
      - llvm
      - make
      - cmake
      - build-essential
    tags: ['sys', 'clang', 'main']
    become: true
# }}}
# CLOJURE{{{
  - name: install clojure (lein)
    get_url: url="https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein" dest="/usr/local/bin/lein" mode=0755 owner=root group=root
    tags: ['sys', 'clojure']
    become: true

  - name: install clojure (boot)
    get_url: url="https://github.com/boot-clj/boot-bin/releases/download/latest/boot.sh" dest="/usr/local/bin/boot" mode=0755 owner=root group=root
    tags: ['sys', 'clojure']
    become: true

  - name: create lein dir
    file: path='~/.lein/' state='directory'
    tags: ['usr', 'clojure']

  - name: create boot dir
    file: path='~/.boot/' state='directory'
    tags: ['usr', 'clojure']

  - name: deploy lein conf
    file: src='{{playbook_dir}}/clojure/profiles.clj' dest='~/.lein/profiles.clj' state=link force=yes
    tags: ['usr', 'clojure']

  - name: deploy boot conf
    file: src='{{playbook_dir}}/clojure/profile.boot' dest='~/.boot/profile.boot' state=link force=yes
    tags: ['usr', 'clojure']

  - name: deploy boot prop
    file: src='{{playbook_dir}}/clojure/boot.properties' dest='~/.boot/boot.properties' state=link force=yes
    tags: ['usr', 'clojure']
# }}}
# ELIXIR{{{
  - name: install elixir
    package: name='elixir'
    tags: ['sys', 'elixir']
    become: true

  - name: deploy elixir conf
    file: src='{{playbook_dir}}/elixir/iex.exs' dest='~/.iex.exs' state=link force=yes
    tags: ['usr', 'elixir']
# }}}
# GRAPHVIZ {{{
  - name: install graphviz
    package: name='graphviz'
    tags: ['sys', 'graphviz']
    become: true
# }}}
# GOLANG{{{
  - name: install golang
    package: name='golang'
    tags: ['sys', 'golang']
    become: true
# }}}
# GROOVY{{{
  - name: install groovy
    package: name='groovy'
    tags: ['sys', 'groovy']
    become: true
# }}}
# HASKELL{{{
  - name: install haskell
    package: name='haskell-stack'
    tags: ['sys', 'haskell']
    become: true

  - name: create stack dir
    file: path='~/.stack/' state='directory'
    tags: ['usr', 'haskell']

  - name: deploy stack conf
    file: src='{{playbook_dir}}/haskell/config.yaml' dest='~/.stack/config.yaml' state=link force=yes
    tags: ['usr', 'haskell']

  - name: deploy haskeline conf
    file: src='{{playbook_dir}}/haskell/haskeline' dest='~/.haskeline' state=link force=yes
    tags: ['usr', 'haskell']
# }}}
# JAVA{{{
  - name: install java
    package: name='default-jdk'
    tags: ['sys', 'java']
    become: true
# }}}
# JULIA{{{
  - name: create julia dir
    file: path='~/.julia/config' state='directory'
    tags: ['usr', 'julia']

  - name: install julia deps
    command: julia -e 'using Pkg; Pkg.add("{{item}}")'
    with_items:
      - IJulia
    ignore_errors: true
    tags: ['usr', 'julia']

  - name: deploy julia conf
    file: src='{{playbook_dir}}/julia/startup.jl' dest='~/.julia/config/startup.jl' state=link force=yes
    tags: ['usr', 'julia']
# }}}
# NODEJS{{{
  - name: install nodejs
    package: name='{{item}}'
    with_items:
      - npm
      - yarn
      - nodejs
    tags: ['sys', 'nodejs', 'main']
    become: true

  - name: deploy npm config
    file: src='{{playbook_dir}}/nodejs/npmrc' dest='~/.npmrc' state=link force=yes
    tags: ['usr', 'nodejs', 'main']
# }}}
# PLANTUML{{{
  - name: install plantuml
    package: name='racket'
    tags: ['sys', 'plantuml']
    become: true
# }}}
# PYTHON{{{
  - name: install python
    package: name='{{item}}'
    with_items:
      - python3
      - python3-pip
      - python3-zmq
      - python3-venv
    tags: ['sys', 'python', 'main']
    become: true

  - name: install python deps
    package: name='{{item}}'
    with_items:
      - llvm
      - make
      - xz-utils
      - zlib1g-dev
      - libbz2-dev
      - libffi-dev
      - liblzma-dev
      - libncurses5-dev
      - libncursesw5-dev
      - libpython-dev
      - libpython3-dev
      - libreadline-dev
      - libsqlite3-dev
      - libssl-dev
    tags: ['sys', 'python', 'main']
    become: true

  - name: install pyenv
    git: repo='https://github.com/pyenv/pyenv.git' dest='~/.pyenv' depth=1
    tags: ['usr', 'python', 'main']

  - name: install python tools
    pip: name='{{item}}' executable='pip3' extra_args='--user'
    with_items:
      - ipdb
      - jedi
      - wheel
      - twine
      - ipython
    tags: ['usr', 'python', 'main']

  - name: deploy pypi conf
    file: src='{{playbook_dir}}/python/pypirc' dest='~/.pypirc' state=link force=yes
    tags: ['usr', 'python', 'main']

  - name: create ipython dir
    file: path='~/.ipython/profile_default/' state='directory'
    tags: ['usr', 'python', 'main']

  - name: deploy ipython conf
    file: src='{{playbook_dir}}/python/ipython.py' dest='~/.ipython/profile_default/ipython_config.py' state=link force=yes
    tags: ['usr', 'python', 'main']
# }}}
# RACKET{{{
  - name: enable racket
    apt_repository: repo='ppa:plt/racket'
    tags: ['sys', 'racket']
    become: true

  - name: install racket
    package: name='racket'
    tags: ['sys', 'racket']
    become: true

  - name: deploy racket conf
    file: src='{{playbook_dir}}/racket/racketrc' dest='~/.racketrc' state=link force=yes
    tags: ['usr', 'racket']
# }}}
# RLANG{{{
  - name: install rlang
    package: name='r-base-core'
    tags: ['sys', 'rlang']
    become: true

  - name: deploy rlang conf
    file: src='{{playbook_dir}}/rlang/Rprofile' dest='~/.Rprofile' state=link force=yes
    tags: ['usr', 'rlang']
# }}}
