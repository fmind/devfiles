---

- hosts: localhost

  tasks:
# CLANG{{{
  - name: install build-essential
    package: name='build-essential'
    tags: ['sys', 'clang']
    become: true
# }}}
# CLOJURE{{{
  - name: install clojure (lein)
    get_url: url="https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein" dest="/usr/local/bin/lein" mode=0755 owner=root group=root
    tags: ['sys', 'clojure']
    become: true

  - name: install clojure (boot)
    get_url: url="https://github.com/boot-clj/boot-bin/releases/download/latest/boot.sh" dest="/usr/local/bin/boot" mode=0755 owner=root group=root
    tags: ['sys', 'clojure']
    become: true

  - name: create lein dir
    file: path='~/.lein/' state='directory'
    tags: ['usr', 'clojure']

  - name: create boot dir
    file: path='~/.boot/' state='directory'
    tags: ['usr', 'clojure']

  - name: deploy lein conf
    file: src='{{playbook_dir}}/clojure/profiles.clj' dest='~/.lein/profiles.clj' state=link force=yes
    tags: ['usr', 'clojure']

  - name: deploy boot conf
    file: src='{{playbook_dir}}/clojure/profile.boot' dest='~/.boot/profile.boot' state=link force=yes
    tags: ['usr', 'clojure']

  - name: deploy boot prop
    file: src='{{playbook_dir}}/clojure/boot.properties' dest='~/.boot/boot.properties' state=link force=yes
    tags: ['usr', 'clojure']
# }}}
# ELIXIR{{{
  - name: install elixir
    package: name='elixir'
    tags: ['sys', 'elixir']
    become: true

  - name: deploy elixir conf
    file: src='{{playbook_dir}}/elixir/iex.exs' dest='~/.iex.exs' state=link force=yes
    tags: ['usr', 'elixir']
# }}}
# GOLANG{{{
  - name: install golang
    package: name='golang'
    tags: ['sys', 'golang']
    become: true
# }}}
# GRAPHVIZ{{{
  - name: install graphviz
    package: name='graphviz'
    tags: ['sys', 'graphviz']
    become: true
# }}}
# GROOVY{{{
  - name: install groovy
    package: name='groovy'
    tags: ['sys', 'groovy']
    become: true
# }}}
# HASKELL{{{
  - name: install haskell
    package: name='haskell-stack'
    tags: ['sys', 'haskell']
    become: true

  - name: create stack dir
    file: path='~/.stack/' state='directory'
    tags: ['usr', 'haskell']

  - name: deploy stack conf
    file: src='{{playbook_dir}}/haskell/config.yaml' dest='~/.stack/config.yaml' state=link force=yes
    tags: ['usr', 'haskell']

  - name: deploy haskeline conf
    file: src='{{playbook_dir}}/haskell/haskeline' dest='~/.haskeline' state=link force=yes
    tags: ['usr', 'haskell']
# }}}
# JAVA{{{
  - name: install java
    package: name='default-jdk'
    tags: ['sys', 'java']
    become: true
# }}}
# JULIA{{{
  - name: install julia
    package: name='julia'
    tags: ['sys', 'julia']
    become: true

  - name: deploy julia conf
    file: src='{{playbook_dir}}/julia/juliarc.jl' dest='~/.juliarc.jl' state=link force=yes
    tags: ['usr', 'julia']
# }}}
# NODEJS{{{
  - name: install nodejs
    package: name='{{item}}'
    with_items:
      - nodejs
      - yarn
      - npm
    tags: ['sys', 'nodejs']
    become: true

  - name: deploy npm config
    file: src='{{playbook_dir}}/nodejs/npmrc' dest='~/.npmrc' state=link force=yes
    tags: ['usr', 'nodejs']
# }}}
# PLANTUML{{{
  - name: install plantuml
    package: name='racket'
    tags: ['sys', 'plantuml']
    become: true
# }}}
# PYTHON{{{
  - name: install python
    package: name='{{item}}'
    with_items:
      - python3
      - python3-pip
      - python3-venv
      - libpython3-dev
      - python3-setuptools
    tags: ['sys', 'python']
    become: true

  - name: install python tools
    pip: name='{{item}}' executable='pip3' extra_args='--user'
    with_items:
      - jedi
      - yapf
      - isort
      - flake8
      - pipenv
    tags: ['usr', 'python']

  - name: install python shells
    pip: name='{{item}}' executable='pip3' extra_args='--user'
    with_items:
      - hy
      - ipython
      - ptpython
      - trypackage
    tags: ['usr', 'python']

  - name: deploy pip conf
    file: src='{{playbook_dir}}/python/pypirc' dest='~/.pypirc' state=link force=yes
    tags: ['usr', 'python']

  - name: create try dir
    file: path='~/.config/try' state=directory
    tags: ['usr', 'python']

  - name: deploy try conf
    file: src='{{playbook_dir}}/python/try.ini' dest='~/.config/try/config.ini' state=link force=yes
    tags: ['usr', 'python']

  - name: create yapf dir
    file: path='~/.config/yapf' state=directory
    tags: ['usr', 'python']

  - name: deploy yapf conf
    file: src='{{playbook_dir}}/python/yapf' dest='~/.config/yapf/style' state=link force=yes
    tags: ['usr', 'python']

  - name: create ipython dir
    shell: ~/.local/bin/ipython profile create default
    args:
        executable: /bin/bash
    tags: ['usr', 'python']

  - name: deploy ipython conf
    file: src='{{playbook_dir}}/python/ipython_config.py' dest='~/.ipython/profile_default/ipython_config.py' state=link force=yes
    tags: ['usr', 'python']

  - name: create ptpython dir
    file: path='~/.ptpython' state=directory
    tags: ['usr', 'python']

  - name: deploy ptpython conf
    file: src='{{playbook_dir}}/python/ptpython.py' dest='~/.ptpython/config.py' state=link force=yes
    tags: ['usr', 'python']

# }}}
# RACKET{{{
  - name: install racket
    package: name='racket'
    tags: ['sys', 'racket']
    become: true

  - name: deploy racket conf
    file: src='{{playbook_dir}}/racket/racketrc' dest='~/.racketrc' state=link force=yes
    tags: ['usr', 'racket']
# }}}
# RLANG{{{
  - name: install rlang
    package: name='r-base-core'
    tags: ['sys', 'rlang']
    become: true

  - name: deploy rlang conf
    file: src='{{playbook_dir}}/rlang/Rprofile' dest='~/.Rprofile' state=link force=yes
    tags: ['usr', 'rlang']
# }}}
