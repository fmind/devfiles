---

- hosts: localhost

# ROLES {{{

  roles:
      - { role: fmind.clang, become: true, tags: ['sys', 'clang', 'sys', 'role', 'lang'] }
      - { role: fmind.clojure, become: true, tags: ['sys', 'clojure', 'fun', 'role', 'lang'] }
      - { role: fmind.elixir, become: true, tags: ['sys', 'elixir', 'fun', 'role', 'lang'] }
      - { role: fmind.golang, become: true, tags: ['sys', 'golang', 'sys', 'role', 'lang'] }
      - { role: fmind.graphviz, become: true, tags: ['sys', 'graphviz', 'img', 'role', 'lang'] }
      - { role: fmind.groovy, become: true, tags: ['sys', 'groovy', 'main', 'role', 'lang'] }
      - { role: fmind.haskell, become: true, tags: ['sys', 'haskell', 'fun', 'role', 'lang'] }
      - { role: fmind.java, become: true, tags: ['sys', 'java', 'main', 'role', 'lang'] }
      - { role: fmind.julia, become: true, tags: ['sys', 'julia', 'stat', 'role', 'lang'] }
      - { role: fmind.nodejs, become: true, tags: ['sys', 'nodejs', 'web', 'role', 'lang'] }
      - { role: fmind.plantuml, become: true, tags: ['sys', 'plantuml', 'img', 'role', 'lang'] }
      - { role: fmind.python, become: true, tags: ['sys', 'python', 'main', 'role', 'lang'] }
      - { role: fmind.rlang, become: true, tags: ['sys', 'rlang', 'stat', 'role', 'lang'] }

# }}}

  tasks:

# CLOJURE {{{

  - name: create lein dir
    file: path='~/.lein/' state='directory'
    tags: ['usr', 'clojure', 'fun', 'file', 'dir']

  - name: create boot dir
    file: path='~/.boot/' state='directory'
    tags: ['usr', 'clojure', 'fun', 'file', 'dir']

  - name: deploy lein conf
    file: src='{{playbook_dir}}/clojure/profiles.clj' dest='~/.lein/profiles.clj' state=link force=yes
    tags: ['usr', 'clojure', 'fun', 'file', 'conf']

  - name: deploy boot conf
    file: src='{{playbook_dir}}/clojure/profile.boot' dest='~/.boot/profile.boot' state=link force=yes
    tags: ['usr', 'clojure', 'fun', 'file', 'conf']

  - name: deploy boot prop
    file: src='{{playbook_dir}}/clojure/boot.properties' dest='~/.boot/boot.properties' state=link force=yes
    tags: ['usr', 'clojure', 'fun', 'file', 'prop']

# }}}

# ELIXIR {{{

  - name: deploy elixir conf
    file: src='{{playbook_dir}}/elixir/iex.exs' dest='~/.iex.exs' state=link force=yes
    tags: ['usr', 'elixir', 'fun', 'file', 'conf']

# }}}

# HASKELL {{{
#
  - name: create stack dir
    file: path='~/.stack/' state='directory'
    tags: ['usr', 'haskell', 'fun', 'file', 'dir']

  - name: deploy stack conf
    file: src='{{playbook_dir}}/haskell/config.yaml' dest='~/.stack/config.yaml' state=link force=yes
    tags: ['usr', 'haskell', 'fun', 'file', 'conf']

  - name: deploy haskeline conf
    file: src='{{playbook_dir}}/haskell/haskeline' dest='~/.haskeline' state=link force=yes
    tags: ['usr', 'haskell', 'fun', 'file', 'conf']

# }}}

# JULIA {{{

  - name: deploy julia conf
    file: src='{{playbook_dir}}/julia/juliarc.jl' dest='~/.juliarc.jl' state=link force=yes
    tags: ['usr', 'julia', 'stat', 'file', 'conf']

# }}}

# NODEJS {{{

  - name: deploy npm config
    file: src='{{playbook_dir}}/npm/npmrc' dest='~/.npmrc' state=link force=yes
    tags: ['usr', 'nodejs', 'web', 'file', 'conf']

# }}}

# PYTHON {{{

  - name: install python tool
    pip: name='{{item}}' executable='pip3' extra_args='--user'
    with_items:
      - jedi
      - yapf
      - isort
      - pipenv
      - flake8
      - autoflake
      - pipenv-pipes
    tags: ['usr', 'python', 'main', 'pip', 'exec']

  - name: install python shell
    pip: name='{{item}}' executable='pip3' extra_args='--user'
    with_items:
      - hy
      - ipython
      - ptpython
      - trypackage
    tags: ['usr', 'python', 'main', 'pip', 'shell']

  - name: deploy pip conf
    file: src='{{playbook_dir}}/python/pypirc' dest='~/.pypirc' state=link force=yes
    tags: ['usr', 'python', 'main', 'file', 'conf']

  - name: create try dir
    file: path='~/.config/try' state=directory
    tags: ['usr', 'python', 'main', 'file', 'dir']

  - name: deploy try conf
    file: src='{{playbook_dir}}/python/try.ini' dest='~/.config/try/config.ini' state=link force=yes
    tags: ['usr', 'python', 'main', 'file', 'conf']

  - name: create yapf dir
    file: path='~/.config/yapf' state=directory
    tags: ['usr', 'python', 'main', 'file', 'dir']

  - name: deploy yapf conf
    file: src='{{playbook_dir}}/python/yapf' dest='~/.config/yapf/style' state=link force=yes
    tags: ['usr', 'python', 'main', 'file', 'conf']

  - name: create ipython dir
    shell: ipython profile create default
    args:
        executable: /bin/bash
    tags: ['usr', 'python', 'main', 'file', 'dir']

  - name: deploy ipython conf
    file: src='{{playbook_dir}}/python/ipython_config.py' dest='~/.ipython/profile_default/ipython_config.py' state=link force=yes
    tags: ['usr', 'python', 'main', 'file', 'conf']

  - name: create ptpython dir
    file: path='~/.ptpython' state=directory
    tags: ['usr', 'python', 'main', 'file', 'dir']

  - name: deploy ptpython conf
    file: src='{{playbook_dir}}/python/ptpython.py' dest='~/.ptpython/config.py' state=link force=yes
    tags: ['usr', 'python', 'main', 'file', 'conf']

# }}}

# RACKET {{{

  - name: deploy racket conf
    file: src='{{playbook_dir}}/racket/racketrc' dest='~/.racketrc' state=link force=yes
    tags: ['usr', 'racket', 'fun', 'file', 'conf']

# }}}

# RLANG {{{

  - name: deploy rlang conf
    file: src='{{playbook_dir}}/rlang/Rprofile' dest='~/.Rprofile' state=link force=yes
    tags: ['usr', 'rlang', 'stat', 'file', 'conf']

# }}}
